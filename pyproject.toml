[project]
name = "otodom-monitoring"
version = "0.1.0"
description = ""
authors = [{ name = "Sergey Ivanychev", email = "sergeyivanychev@gmail.com" }]
requires-python = ">=3.13,<3.14"
readme = "README.md"
dependencies = [
    "requests>=2.32.3,<3",
    "beautifulsoup4>=4.12.3,<5",
    "furl>=2.1.3,<3",
    "typing-extensions>=4.8.0,<5",
    "pydantic>=2.9.2,<3",
    "click>=8.1.7,<9",
    "loguru>=0.7.2,<0.8",
    "tenacity>=8.2.3,<9",
    "timeago>=1.0.16,<2",
    "apscheduler~=3.10.4",
    "asgiref>=3.7.2,<4",
    "telethon>=1.37.0,<2",
    "redis[hiredis]>=5.0.1,<6",
    "dacite>=1.8.1,<2",
    "cytoolz>=1.0.0,<2",
    "selenium>=4.15.2,<5",
    "pandas>=2.1.3,<3",
    "html5lib~=1.1",
    "orjson>=3.10.10,<4",
    "lxml>=5.3.0,<6",
    "tqdm>=4.66.4,<5",
]

[dependency-groups]
dev = [
    "ipython>=8.17.2,<9",
    "black>=23.11.0,<24",
    "isort>=5.12.0,<6",
    "pycln>=2.3.0,<3",
    "pyupgrade>=3.15.0,<4",
    "ruff>=0.7.1,<0.8",
    "tzlocal<3.0",
]

[tool.ruff]
line-length = 100
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "UP",  # pyupgrade
    "F",   # pyflakes
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "Q",   # flake8-quotes
    "S",   # flake8-bandit
    "C4",  # flake8-comprehensions
    "I",   # isort
    "RUF", # Ruff-specific rules
    "FA", # flake8-future-annotations
    "ISC", # https://beta.ruff.rs/docs/rules/#flake8-implicit-str-concat-isc
    "PIE", # https://beta.ruff.rs/docs/rules/#flake8-pie-pie
    "PT", # https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
    "RSE", # https://beta.ruff.rs/docs/rules/#flake8-raise-rse
    "RET", # https://beta.ruff.rs/docs/rules/#flake8-return-ret
    "SIM", # https://beta.ruff.rs/docs/rules/#flake8-simplify-sim
    "N",  # pep8-naming
    "BLE",  # flake8-blind-except
]
lint.ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # use of assert
    "S311",  # use of random
    "S608",  # use of SQL formatting (possible injection)
    "S301",  # use of pickle
    'N812',  #  Lowercase ... imported as non-lowercase ...
    'N817',  #  imported as acronym
    'N806',  #  Variable in function should be lowercase
    'N802',  #  Function name should be lowercase
    'N803',  #  Argument name should be lowercase
    'N815',  #  in class scope should not be mixedCase
    'N814',  #  Camelcase imported as constant `BL`
    # TODO: enable following rules
    "RUF012", # TODO: enable: Mutable class attributes
    "PT011", # pytest.raises is too broad
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q003",
]
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "single"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["pipelines", "common_utils", "expectations"]

[tool.black]
line-length = 100
skip-string-normalization = true
target-version = ['py312']
include = '\.py?$'
force-exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''
